#include "mod.h"
#include "stub/tfplayer.h"
#include "stub/gamerules.h"
#include "util/misc.h"

namespace Mod::MvM::Buyback_Exploit_Fix
{
	bool profile[MAX_PLAYERS + 1] = {};
    DETOUR_DECL_MEMBER(bool, CTFPlayer_ClientCommand, const CCommand& args)
	{
		auto player = reinterpret_cast<CTFPlayer *>(this);
		if (FStrEq(args[0], "td_buyback")) {
			if (TFGameRules()->GetNextRespawnWave(player->GetTeamNumber(), player) - gpGlobals->curtime < 0) {
				return true;
			}
		}
		
		return DETOUR_MEMBER_CALL(CTFPlayer_ClientCommand)(args);
	}

    class CMod : public IMod
	{
	public:
		CMod() : IMod("MvM:Buyback_Exploit_Fix")
		{
			MOD_ADD_DETOUR_MEMBER(CTFPlayer_ClientCommand, "CTFPlayer::ClientCommand");
        }
    };
	CMod s_Mod;

    ConVar cvar_enable("sig_mvm_buyback_exploit_fix", "0", FCVAR_NOTIFY,
		"Mod: buyback exploit fix",
		[](IConVar *pConVar, const char *pOldValue, float flOldValue){
			s_Mod.Toggle(static_cast<ConVar *>(pConVar)->GetBool());
		});
}